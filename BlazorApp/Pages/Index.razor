@page "/"
@using System.ComponentModel.DataAnnotations
@using System.Text.Json
@using BlazorApp.Model.Dto
@inject IJSRuntime JSRuntime;

<div class="card m-3">
    <h4 class="card-header">Blazor WebAssembly Form Validation Example</h4>
    <div class="card-body">
        <EditForm EditContext="@editContext" OnValidSubmit="HandleValidSubmit" @onreset="HandleReset">
            <DataAnnotationsValidator />
            <div class="form-row">
                <div class="form-group col">
                    <label>Title</label>
                    <InputSelect @bind-Value="_cardModel.Title" class="form-control">
                        <option value=""></option>
                        <option value="Mr">Mr</option>
                        <option value="Mrs">Mrs</option>
                        <option value="Miss">Miss</option>
                        <option value="Ms">Ms</option>
                    </InputSelect>
                    <ValidationMessage For="@(() => _cardModel.Title)" />
                </div>
                <div class="form-group col-5">
                    <label>First Name</label>
                    <InputText @bind-Value="_cardModel.FirstName" class="form-control" />
                    <ValidationMessage For="@(() => _cardModel.FirstName)" />
                </div>
                <div class="form-group col-5">
                    <label>Last Name</label>
                    <InputText @bind-Value="_cardModel.LastName" class="form-control" />
                    <ValidationMessage For="@(() => _cardModel.LastName)" />
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col">
                    <label>Date of Birth</label>
                    <InputDate @bind-Value="_cardModel.DateOfBirth" class="form-control" />
                    <ValidationMessage For="@(() => _cardModel.DateOfBirth)" />
                </div>
                <div class="form-group col">
                    <label>Email</label>
                    <InputText @bind-Value="_cardModel.Email" class="form-control" />
                    <ValidationMessage For="@(() => _cardModel.Email)" />
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col">
                    <label>Password</label>
                    <InputText @bind-Value="_cardModel.Password" type="password" class="form-control" />
                    <ValidationMessage For="@(() => _cardModel.Password)" />
                </div>
                <div class="form-group col">
                    <label>Confirm Password</label>
                    <InputText @bind-Value="_cardModel.ConfirmPassword" type="password" class="form-control" />
                    <ValidationMessage For="@(() => _cardModel.ConfirmPassword)" />
                </div>
            </div>
            <div class="form-group form-check">
                <InputCheckbox @bind-Value="_cardModel.AcceptTerms" id="acceptTerms" class="form-check-input" />
                <label for="acceptTerms" class="form-check-label">Accept Terms & Conditions</label>
                <ValidationMessage For="@(() => _cardModel.AcceptTerms)" />
            </div>
            <div class="text-center">
                <button type="submit" class="btn btn-primary mr-1">Register</button>
                <button type="reset" class="btn btn-secondary">Cancel</button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private CardModel _cardModel = new CardModel();
    private EditContext editContext;

    protected override void OnInitialized()
    {
        editContext = new EditContext(_cardModel);
    }

    private void HandleValidSubmit()
    {
        var modelJson = JsonSerializer.Serialize(_cardModel, new JsonSerializerOptions { WriteIndented = true });
        JSRuntime.InvokeVoidAsync("alert", $"SUCCESS!! :-)\n\n{modelJson}");
    }

    private void HandleReset()
    {
        _cardModel = new CardModel();
        editContext = new EditContext(_cardModel);
    }
}